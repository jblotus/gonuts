package euler

import "fmt"

//http://projecteuler.net/problem=2
//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
//

func Problem2() int {

	fibs := FindFibs()

	solution := SumEvenFibs(fibs)

	fmt.Println(solution)
	return solution
}

func FindFibs() []int {

	var current int
	const MAXFIBVAL int = 4000001

	fibs := []int{}

	f := Fibonacci()

	for current < MAXFIBVAL {
		current = f()

		if current < MAXFIBVAL {
			fibs = append(fibs, current)
		}
	}
	return fibs
}

func SumEvenFibs(fibs []int) int {
	var solution int
	for _, term := range fibs {
		if term%2 == 0 {
			solution += term
		}
	}
	return solution
}

func Fibonacci() func() int {
	a := 0
	b := 1
	return func() int {
		c := a + b
		a = b
		b = c
		return a
	}
}
